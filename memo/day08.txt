클래스 배열

객체를 여러개 선언해야 하는 경우 배열 타입으로 한번에 선언 후 사용한다.

클래스 배열 선언
1.클래스명 [] 배열명 = new 클래스명[길이];
2.클래스명 [] 배열명 = {
			new 클래스명(),
			new 클래스명(),

			}

클래스 배열 초기화
배열명[index] = new 클래스명();

클래스 배열 사용
배열명[index].brand = "Benz"; >> 저장공간

println(배열명[index].brand); >> 값

배열명[index].show(); >> 리턴값이 없다면 전체를 기능으로 보자.

배열명[index].getData(); >> 리턴값이 있다면 전체를 값으로 보자.

--------------------------------------------------------------------------------------------
상속(inheritance)

	기존에 사용중인 클래스에서 필요한 기능들을 
	다른 클래스에서 가져다 쓸 수 있는 것.

class A{
	A필드
}

class B extends A{
	A, B필드
}

부모 클래스, 상위 클래스, 슈퍼 클래스, 기반 클래스 

자식 클래스, 하위 클래스, 서브 클래스, 파생 클래스

부모 클래스로부터 상속받은 멤버 변수의 접근 권한이 private일 경우
1. 부모 클래스의 생성자를 호출해서 초기화 한다.
2. 부모 클래스의 setter 메소드를 정의했다면 상속받은
   setter 메소드를 호출해서 초기화 한다.
3. 변수에 저장된 값은 getter 메소드를 사용해서 가져온다.

부모 클래스로부터 상속받은 멤버 변수의 접근 권한이 protected 일 경우
그냥 접근한다.

자식 클래스의 생성자가 실행되기 전에 부모 클래스의 생성자가 먼저 실행된다.

super()를 지워도 부모 클래스의 기본 생성자가 자동으로 실행된다.

자동으로 입력되는 super()를 지우더라도 자바 컴파일러가 자동으로 넣어준다.

-------------------------------------------------------------------------------------------------------
다형성: polymorphism

다형성이란 하나의 메소드가 서로 다른 클래스에서 다양하게 실행되는 것을 말한다.

다형성을 구현하기 위해서는 자식 클래스에게 부모 클래스가 상속해줘야 하고, 자식 클래스에는 같은 이름의 메서드가 있어야 한다. 그것을 오버 라이딩이라 하고, 다형성의 좋은 예이다.

같은 이름의 메서드지만 매개변수의 갯수나 타입이 다른 오버로딩 또한 다형성을 가지고 있다.

