메서드

함수와 메서드의 차이

이름()
단, 키워드()는 메서드가 아니다.

	f	(x)	=	2x+1
	메서드	매개		리턴값
	이름	변수	

	f(1) : 리턴값이 있다면 통채로를 리턴값으로 보자
		
 	int result = f(1);

메서드의 선언

	리턴타입 메서드명(자료형 매개변수1,....){
		실행할 문장;
		return 리턴값;
	{
	
메서드 선언 순서
덧셈 메서드

	1. 메서드 이름을 생각한다.
		add(){}

	2. 매개변수를 생각한다.
		add(int x, int y){}
		
	3. 실행할 문장을 생각한다.
		add(int x, int y){
			x+y;
		}

	4. 리턴값을 생각한다.
		add(int x, int y){
		    return x+y;
		}
		
	5. 리턴 타입을 생각한다.
   		int add(int x, int y){
		    return x+y;
		}

메서드 주의사항

	1. 매개변수가 없는 메서드는 외부에서 값으 전달 받을 수 없다.
	2. 리턴값이 있는 메서드는 사용시 통채로를 리턴값으로 보자!
	3. 메서드 내부에 다른 메서드를 선언할 수 없다.
		단, 사용은 가능하다.
	4. 메서드 선언시 매개변수는 저장공간이다.
		사용시에는 값을 순서대로 타입에 맞게 넣어준다.

		(String name, int age) >> ("송민기", 7)

	5. 메서드는 반드시 메서드 안에서 사용해야한다.

----------------------------------------------------------------------------------

main 메서드

cmd 창에서 java 파일이 있는 경로 복사해서 'cd 경로' 붙여넣기
'java 클래스이름.java'
클래스 파일이 만들어졌는지 확인
'cd ..'
java 클래스 파일이름 문자열 문자열 문자열

-----------------------------------------------------------------------------------

메서드를 사용하는 이유

1. 반복되는 기능들을 쉽게 관리하기 위해서
재사용의 목적이 있기 때문에 특정성을 부여하지 않는다.

2. 소스코드의 간결화를 위해

main 메서드는 static 키워드가 붙어있기 때문에
컴파일 시 가장 먼저 ram에 올라간다.
따라서 static 키워드가 없는 메서드를 main메서드에서 사용시 오류가 발생한다.

해결방안 
1. 사용하고자 하는 메서드 리턴타입 앞에 static 키워드를 붙여준다.

2. 사용하고자 하는 메서드의 소속을 알려준다.
	
	클래스명 변수 = new 클래스명();
	변수. 메서드명();

